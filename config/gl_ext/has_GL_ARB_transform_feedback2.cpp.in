/**
 *  Copyright 2010-2013 Matus Chochlik. Distributed under the Boost
 *  Software License, Version 1.0. (See accompanying file
 *  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#include <oglplus/gl.hpp>

#include <cstring>
#include <cstddef>

#if @GLUT_FOUND@
#include <GL/glut.h>
#endif

bool gl_has_ARB_transform_feedback2(void)
{
	GLuint x = 0;
	glGenTransformFeedbacks(1, &x);
	if(glGetError() != GL_NO_ERROR)
		return false;
	glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, x);
	if(glGetError() != GL_NO_ERROR)
		return false;
	if(glIsTransformFeedback(x) != GL_TRUE)
		return false;
	if(glGetError() != GL_NO_ERROR)
		return false;
	glBindTransformFeedback(GL_TRANSFORM_FEEDBACK, 0);
	if(glGetError() != GL_NO_ERROR)
		return false;
	glDeleteTransformFeedbacks(1, &x);
	if(glGetError() != GL_NO_ERROR)
		return false;
	return true;
}

bool gl_extension_is_available_GLUT(void)
{
	int argc = 0;
	char** argv = nullptr;
	glutInit(&argc, argv);
	glutInitDisplayMode(
		GLUT_DOUBLE|
		GLUT_RGBA|
		GLUT_DEPTH|
		GLUT_STENCIL
	);
	glutInitWindowSize(64, 64);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("GL_ARB_transform_feedback2 extension detection");

	oglplus::GLAPIInitializer gl_api;

	return gl_has_ARB_transform_feedback2();
}

bool gl_extension_is_available(void)
{
#if @GLUT_FOUND@
	return gl_extension_is_available_GLUT();
#else
	return true;
#endif
}

int main(void)
{
#if !defined GL_ARB_transform_feedback2
	return 1;
#elif !GL_ARB_transform_feedback2
	return 1;
#elif !@OGLPLUS_CONFIG_STRICT_VERSION_CHECK@
	return 0;
#else
	return gl_extension_is_available()?0:1;
#endif
}
