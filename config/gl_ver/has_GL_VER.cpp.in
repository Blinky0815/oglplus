/**
 *  Copyright 2010-2013 Matus Chochlik. Distributed under the Boost
 *  Software License, Version 1.0. (See accompanying file
 *  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#include <oglplus/gl.hpp>

#if @GLUT_FOUND@
#include <GL/glut.h>
#endif

bool gl_compare_versions(GLint req_major, GLint req_minor)
{
	GLint sup_major = 0, sup_minor = 0;
	glGetIntegerv(GL_MAJOR_VERSION, &sup_major);
	glGetIntegerv(GL_MINOR_VERSION, &sup_minor);

	if(sup_major >  req_major)
		return true;
	if((sup_major == req_major) && (sup_minor >= req_minor))
		return true;
	return false;
}

#if @GLUT_FOUND@
bool gl_version_is_supported_GLUT(GLint major, GLint minor)
{
	int argc = 0;
	char** argv = nullptr;
	glutInit(&argc, argv);
	glutInitDisplayMode(
		GLUT_DOUBLE|
		GLUT_RGBA|
		GLUT_DEPTH|
		GLUT_STENCIL
	);
	glutInitWindowSize(64, 64);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("GL version detection");

	oglplus::GLAPIInitializer gl_api(major, minor);

	return gl_compare_versions(major, minor);
}
#endif

bool gl_version_is_supported(GLint major, GLint minor)
{
#if @GLUT_FOUND@
	return gl_version_is_supported_GLUT(major, minor);
#else
	return true;
#endif
}

int main(void)
{
#if !defined @OGLPLUS_CONFIG_QUERY_GL_VER@
	return 1;
#elif !@OGLPLUS_CONFIG_QUERY_GL_VER@
	return 1;
#elif !@OGLPLUS_CONFIG_STRICT_VERSION_CHECK@
	return 0;
#else
	return gl_version_is_supported(
		@OGLPLUS_CONFIG_QUERY_GL_VER_MAJOR@,
		@OGLPLUS_CONFIG_QUERY_GL_VER_MINOR@
	)?0:1;
#endif
}
