/*
 *  .file source/bindings/python/oglplus/vector_swizzle.ipp
 *
 *  Automatically generated header file. DO NOT modify manually,
 *  edit 'tools/make_vec_swiz_header.sh' instead.
 *
 *  Copyright 2010-2013 Matus Chochlik. Distributed under the Boost
 *  Software License, Version 1.0. (See accompanying file
 *  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */


template <typename T>
void oglplus_py_export_Vector_Swizzle_xyzw(
	oglplus::Vector<T, 1>*,
	const char* name
)
{
	namespace bpy = ::boost::python;
	using namespace oglplus;

	typedef oglplus::Swizzled_xyzw<T, 1> Swizzled;
	typedef oglplus::Vector<T, 1> Vector;
	bpy::class_<Swizzled, bpy::bases<Vector> >(name, bpy::init<Vector>())
		.def("x", &Swizzled::x)
	;
	bpy::def("Swizzle_xyzw", &Swizzle_xyzw<T, 1>);
}

template <typename T>
void oglplus_py_export_Vector_Swizzle_xyzw(
	oglplus::Vector<T, 2>*,
	const char* name
)
{
	namespace bpy = ::boost::python;
	using namespace oglplus;

	typedef oglplus::Swizzled_xyzw<T, 2> Swizzled;
	typedef oglplus::Vector<T, 2> Vector;
	bpy::class_<Swizzled, bpy::bases<Vector> >(name, bpy::init<Vector>())
		.def("x", &Swizzled::x)
		.def("y", &Swizzled::y)
		.def("xx", &Swizzled::xx)
		.def("xy", &Swizzled::xy)
		.def("yx", &Swizzled::yx)
		.def("yy", &Swizzled::yy)
	;
	bpy::def("Swizzle_xyzw", &Swizzle_xyzw<T, 2>);
}

template <typename T>
void oglplus_py_export_Vector_Swizzle_xyzw(
	oglplus::Vector<T, 3>*,
	const char* name
)
{
	namespace bpy = ::boost::python;
	using namespace oglplus;

	typedef oglplus::Swizzled_xyzw<T, 3> Swizzled;
	typedef oglplus::Vector<T, 3> Vector;
	bpy::class_<Swizzled, bpy::bases<Vector> >(name, bpy::init<Vector>())
		.def("x", &Swizzled::x)
		.def("y", &Swizzled::y)
		.def("z", &Swizzled::z)
		.def("xx", &Swizzled::xx)
		.def("xy", &Swizzled::xy)
		.def("xz", &Swizzled::xz)
		.def("yx", &Swizzled::yx)
		.def("yy", &Swizzled::yy)
		.def("yz", &Swizzled::yz)
		.def("zx", &Swizzled::zx)
		.def("zy", &Swizzled::zy)
		.def("zz", &Swizzled::zz)
		.def("xxx", &Swizzled::xxx)
		.def("xxy", &Swizzled::xxy)
		.def("xxz", &Swizzled::xxz)
		.def("xyx", &Swizzled::xyx)
		.def("xyy", &Swizzled::xyy)
		.def("xyz", &Swizzled::xyz)
		.def("xzx", &Swizzled::xzx)
		.def("xzy", &Swizzled::xzy)
		.def("xzz", &Swizzled::xzz)
		.def("yxx", &Swizzled::yxx)
		.def("yxy", &Swizzled::yxy)
		.def("yxz", &Swizzled::yxz)
		.def("yyx", &Swizzled::yyx)
		.def("yyy", &Swizzled::yyy)
		.def("yyz", &Swizzled::yyz)
		.def("yzx", &Swizzled::yzx)
		.def("yzy", &Swizzled::yzy)
		.def("yzz", &Swizzled::yzz)
		.def("zxx", &Swizzled::zxx)
		.def("zxy", &Swizzled::zxy)
		.def("zxz", &Swizzled::zxz)
		.def("zyx", &Swizzled::zyx)
		.def("zyy", &Swizzled::zyy)
		.def("zyz", &Swizzled::zyz)
		.def("zzx", &Swizzled::zzx)
		.def("zzy", &Swizzled::zzy)
		.def("zzz", &Swizzled::zzz)
	;
	bpy::def("Swizzle_xyzw", &Swizzle_xyzw<T, 3>);
}

template <typename T>
void oglplus_py_export_Vector_Swizzle_xyzw(
	oglplus::Vector<T, 4>*,
	const char* name
)
{
	namespace bpy = ::boost::python;
	using namespace oglplus;

	typedef oglplus::Swizzled_xyzw<T, 4> Swizzled;
	typedef oglplus::Vector<T, 4> Vector;
	bpy::class_<Swizzled, bpy::bases<Vector> >(name, bpy::init<Vector>())
		.def("x", &Swizzled::x)
		.def("y", &Swizzled::y)
		.def("z", &Swizzled::z)
		.def("w", &Swizzled::w)
		.def("xx", &Swizzled::xx)
		.def("xy", &Swizzled::xy)
		.def("xz", &Swizzled::xz)
		.def("xw", &Swizzled::xw)
		.def("yx", &Swizzled::yx)
		.def("yy", &Swizzled::yy)
		.def("yz", &Swizzled::yz)
		.def("yw", &Swizzled::yw)
		.def("zx", &Swizzled::zx)
		.def("zy", &Swizzled::zy)
		.def("zz", &Swizzled::zz)
		.def("zw", &Swizzled::zw)
		.def("wx", &Swizzled::wx)
		.def("wy", &Swizzled::wy)
		.def("wz", &Swizzled::wz)
		.def("ww", &Swizzled::ww)
		.def("xxx", &Swizzled::xxx)
		.def("xxy", &Swizzled::xxy)
		.def("xxz", &Swizzled::xxz)
		.def("xxw", &Swizzled::xxw)
		.def("xyx", &Swizzled::xyx)
		.def("xyy", &Swizzled::xyy)
		.def("xyz", &Swizzled::xyz)
		.def("xyw", &Swizzled::xyw)
		.def("xzx", &Swizzled::xzx)
		.def("xzy", &Swizzled::xzy)
		.def("xzz", &Swizzled::xzz)
		.def("xzw", &Swizzled::xzw)
		.def("xwx", &Swizzled::xwx)
		.def("xwy", &Swizzled::xwy)
		.def("xwz", &Swizzled::xwz)
		.def("xww", &Swizzled::xww)
		.def("yxx", &Swizzled::yxx)
		.def("yxy", &Swizzled::yxy)
		.def("yxz", &Swizzled::yxz)
		.def("yxw", &Swizzled::yxw)
		.def("yyx", &Swizzled::yyx)
		.def("yyy", &Swizzled::yyy)
		.def("yyz", &Swizzled::yyz)
		.def("yyw", &Swizzled::yyw)
		.def("yzx", &Swizzled::yzx)
		.def("yzy", &Swizzled::yzy)
		.def("yzz", &Swizzled::yzz)
		.def("yzw", &Swizzled::yzw)
		.def("ywx", &Swizzled::ywx)
		.def("ywy", &Swizzled::ywy)
		.def("ywz", &Swizzled::ywz)
		.def("yww", &Swizzled::yww)
		.def("zxx", &Swizzled::zxx)
		.def("zxy", &Swizzled::zxy)
		.def("zxz", &Swizzled::zxz)
		.def("zxw", &Swizzled::zxw)
		.def("zyx", &Swizzled::zyx)
		.def("zyy", &Swizzled::zyy)
		.def("zyz", &Swizzled::zyz)
		.def("zyw", &Swizzled::zyw)
		.def("zzx", &Swizzled::zzx)
		.def("zzy", &Swizzled::zzy)
		.def("zzz", &Swizzled::zzz)
		.def("zzw", &Swizzled::zzw)
		.def("zwx", &Swizzled::zwx)
		.def("zwy", &Swizzled::zwy)
		.def("zwz", &Swizzled::zwz)
		.def("zww", &Swizzled::zww)
		.def("wxx", &Swizzled::wxx)
		.def("wxy", &Swizzled::wxy)
		.def("wxz", &Swizzled::wxz)
		.def("wxw", &Swizzled::wxw)
		.def("wyx", &Swizzled::wyx)
		.def("wyy", &Swizzled::wyy)
		.def("wyz", &Swizzled::wyz)
		.def("wyw", &Swizzled::wyw)
		.def("wzx", &Swizzled::wzx)
		.def("wzy", &Swizzled::wzy)
		.def("wzz", &Swizzled::wzz)
		.def("wzw", &Swizzled::wzw)
		.def("wwx", &Swizzled::wwx)
		.def("wwy", &Swizzled::wwy)
		.def("wwz", &Swizzled::wwz)
		.def("www", &Swizzled::www)
		.def("xxxx", &Swizzled::xxxx)
		.def("xxxy", &Swizzled::xxxy)
		.def("xxxz", &Swizzled::xxxz)
		.def("xxxw", &Swizzled::xxxw)
		.def("xxyx", &Swizzled::xxyx)
		.def("xxyy", &Swizzled::xxyy)
		.def("xxyz", &Swizzled::xxyz)
		.def("xxyw", &Swizzled::xxyw)
		.def("xxzx", &Swizzled::xxzx)
		.def("xxzy", &Swizzled::xxzy)
		.def("xxzz", &Swizzled::xxzz)
		.def("xxzw", &Swizzled::xxzw)
		.def("xxwx", &Swizzled::xxwx)
		.def("xxwy", &Swizzled::xxwy)
		.def("xxwz", &Swizzled::xxwz)
		.def("xxww", &Swizzled::xxww)
		.def("xyxx", &Swizzled::xyxx)
		.def("xyxy", &Swizzled::xyxy)
		.def("xyxz", &Swizzled::xyxz)
		.def("xyxw", &Swizzled::xyxw)
		.def("xyyx", &Swizzled::xyyx)
		.def("xyyy", &Swizzled::xyyy)
		.def("xyyz", &Swizzled::xyyz)
		.def("xyyw", &Swizzled::xyyw)
		.def("xyzx", &Swizzled::xyzx)
		.def("xyzy", &Swizzled::xyzy)
		.def("xyzz", &Swizzled::xyzz)
		.def("xyzw", &Swizzled::xyzw)
		.def("xywx", &Swizzled::xywx)
		.def("xywy", &Swizzled::xywy)
		.def("xywz", &Swizzled::xywz)
		.def("xyww", &Swizzled::xyww)
		.def("xzxx", &Swizzled::xzxx)
		.def("xzxy", &Swizzled::xzxy)
		.def("xzxz", &Swizzled::xzxz)
		.def("xzxw", &Swizzled::xzxw)
		.def("xzyx", &Swizzled::xzyx)
		.def("xzyy", &Swizzled::xzyy)
		.def("xzyz", &Swizzled::xzyz)
		.def("xzyw", &Swizzled::xzyw)
		.def("xzzx", &Swizzled::xzzx)
		.def("xzzy", &Swizzled::xzzy)
		.def("xzzz", &Swizzled::xzzz)
		.def("xzzw", &Swizzled::xzzw)
		.def("xzwx", &Swizzled::xzwx)
		.def("xzwy", &Swizzled::xzwy)
		.def("xzwz", &Swizzled::xzwz)
		.def("xzww", &Swizzled::xzww)
		.def("xwxx", &Swizzled::xwxx)
		.def("xwxy", &Swizzled::xwxy)
		.def("xwxz", &Swizzled::xwxz)
		.def("xwxw", &Swizzled::xwxw)
		.def("xwyx", &Swizzled::xwyx)
		.def("xwyy", &Swizzled::xwyy)
		.def("xwyz", &Swizzled::xwyz)
		.def("xwyw", &Swizzled::xwyw)
		.def("xwzx", &Swizzled::xwzx)
		.def("xwzy", &Swizzled::xwzy)
		.def("xwzz", &Swizzled::xwzz)
		.def("xwzw", &Swizzled::xwzw)
		.def("xwwx", &Swizzled::xwwx)
		.def("xwwy", &Swizzled::xwwy)
		.def("xwwz", &Swizzled::xwwz)
		.def("xwww", &Swizzled::xwww)
		.def("yxxx", &Swizzled::yxxx)
		.def("yxxy", &Swizzled::yxxy)
		.def("yxxz", &Swizzled::yxxz)
		.def("yxxw", &Swizzled::yxxw)
		.def("yxyx", &Swizzled::yxyx)
		.def("yxyy", &Swizzled::yxyy)
		.def("yxyz", &Swizzled::yxyz)
		.def("yxyw", &Swizzled::yxyw)
		.def("yxzx", &Swizzled::yxzx)
		.def("yxzy", &Swizzled::yxzy)
		.def("yxzz", &Swizzled::yxzz)
		.def("yxzw", &Swizzled::yxzw)
		.def("yxwx", &Swizzled::yxwx)
		.def("yxwy", &Swizzled::yxwy)
		.def("yxwz", &Swizzled::yxwz)
		.def("yxww", &Swizzled::yxww)
		.def("yyxx", &Swizzled::yyxx)
		.def("yyxy", &Swizzled::yyxy)
		.def("yyxz", &Swizzled::yyxz)
		.def("yyxw", &Swizzled::yyxw)
		.def("yyyx", &Swizzled::yyyx)
		.def("yyyy", &Swizzled::yyyy)
		.def("yyyz", &Swizzled::yyyz)
		.def("yyyw", &Swizzled::yyyw)
		.def("yyzx", &Swizzled::yyzx)
		.def("yyzy", &Swizzled::yyzy)
		.def("yyzz", &Swizzled::yyzz)
		.def("yyzw", &Swizzled::yyzw)
		.def("yywx", &Swizzled::yywx)
		.def("yywy", &Swizzled::yywy)
		.def("yywz", &Swizzled::yywz)
		.def("yyww", &Swizzled::yyww)
		.def("yzxx", &Swizzled::yzxx)
		.def("yzxy", &Swizzled::yzxy)
		.def("yzxz", &Swizzled::yzxz)
		.def("yzxw", &Swizzled::yzxw)
		.def("yzyx", &Swizzled::yzyx)
		.def("yzyy", &Swizzled::yzyy)
		.def("yzyz", &Swizzled::yzyz)
		.def("yzyw", &Swizzled::yzyw)
		.def("yzzx", &Swizzled::yzzx)
		.def("yzzy", &Swizzled::yzzy)
		.def("yzzz", &Swizzled::yzzz)
		.def("yzzw", &Swizzled::yzzw)
		.def("yzwx", &Swizzled::yzwx)
		.def("yzwy", &Swizzled::yzwy)
		.def("yzwz", &Swizzled::yzwz)
		.def("yzww", &Swizzled::yzww)
		.def("ywxx", &Swizzled::ywxx)
		.def("ywxy", &Swizzled::ywxy)
		.def("ywxz", &Swizzled::ywxz)
		.def("ywxw", &Swizzled::ywxw)
		.def("ywyx", &Swizzled::ywyx)
		.def("ywyy", &Swizzled::ywyy)
		.def("ywyz", &Swizzled::ywyz)
		.def("ywyw", &Swizzled::ywyw)
		.def("ywzx", &Swizzled::ywzx)
		.def("ywzy", &Swizzled::ywzy)
		.def("ywzz", &Swizzled::ywzz)
		.def("ywzw", &Swizzled::ywzw)
		.def("ywwx", &Swizzled::ywwx)
		.def("ywwy", &Swizzled::ywwy)
		.def("ywwz", &Swizzled::ywwz)
		.def("ywww", &Swizzled::ywww)
		.def("zxxx", &Swizzled::zxxx)
		.def("zxxy", &Swizzled::zxxy)
		.def("zxxz", &Swizzled::zxxz)
		.def("zxxw", &Swizzled::zxxw)
		.def("zxyx", &Swizzled::zxyx)
		.def("zxyy", &Swizzled::zxyy)
		.def("zxyz", &Swizzled::zxyz)
		.def("zxyw", &Swizzled::zxyw)
		.def("zxzx", &Swizzled::zxzx)
		.def("zxzy", &Swizzled::zxzy)
		.def("zxzz", &Swizzled::zxzz)
		.def("zxzw", &Swizzled::zxzw)
		.def("zxwx", &Swizzled::zxwx)
		.def("zxwy", &Swizzled::zxwy)
		.def("zxwz", &Swizzled::zxwz)
		.def("zxww", &Swizzled::zxww)
		.def("zyxx", &Swizzled::zyxx)
		.def("zyxy", &Swizzled::zyxy)
		.def("zyxz", &Swizzled::zyxz)
		.def("zyxw", &Swizzled::zyxw)
		.def("zyyx", &Swizzled::zyyx)
		.def("zyyy", &Swizzled::zyyy)
		.def("zyyz", &Swizzled::zyyz)
		.def("zyyw", &Swizzled::zyyw)
		.def("zyzx", &Swizzled::zyzx)
		.def("zyzy", &Swizzled::zyzy)
		.def("zyzz", &Swizzled::zyzz)
		.def("zyzw", &Swizzled::zyzw)
		.def("zywx", &Swizzled::zywx)
		.def("zywy", &Swizzled::zywy)
		.def("zywz", &Swizzled::zywz)
		.def("zyww", &Swizzled::zyww)
		.def("zzxx", &Swizzled::zzxx)
		.def("zzxy", &Swizzled::zzxy)
		.def("zzxz", &Swizzled::zzxz)
		.def("zzxw", &Swizzled::zzxw)
		.def("zzyx", &Swizzled::zzyx)
		.def("zzyy", &Swizzled::zzyy)
		.def("zzyz", &Swizzled::zzyz)
		.def("zzyw", &Swizzled::zzyw)
		.def("zzzx", &Swizzled::zzzx)
		.def("zzzy", &Swizzled::zzzy)
		.def("zzzz", &Swizzled::zzzz)
		.def("zzzw", &Swizzled::zzzw)
		.def("zzwx", &Swizzled::zzwx)
		.def("zzwy", &Swizzled::zzwy)
		.def("zzwz", &Swizzled::zzwz)
		.def("zzww", &Swizzled::zzww)
		.def("zwxx", &Swizzled::zwxx)
		.def("zwxy", &Swizzled::zwxy)
		.def("zwxz", &Swizzled::zwxz)
		.def("zwxw", &Swizzled::zwxw)
		.def("zwyx", &Swizzled::zwyx)
		.def("zwyy", &Swizzled::zwyy)
		.def("zwyz", &Swizzled::zwyz)
		.def("zwyw", &Swizzled::zwyw)
		.def("zwzx", &Swizzled::zwzx)
		.def("zwzy", &Swizzled::zwzy)
		.def("zwzz", &Swizzled::zwzz)
		.def("zwzw", &Swizzled::zwzw)
		.def("zwwx", &Swizzled::zwwx)
		.def("zwwy", &Swizzled::zwwy)
		.def("zwwz", &Swizzled::zwwz)
		.def("zwww", &Swizzled::zwww)
		.def("wxxx", &Swizzled::wxxx)
		.def("wxxy", &Swizzled::wxxy)
		.def("wxxz", &Swizzled::wxxz)
		.def("wxxw", &Swizzled::wxxw)
		.def("wxyx", &Swizzled::wxyx)
		.def("wxyy", &Swizzled::wxyy)
		.def("wxyz", &Swizzled::wxyz)
		.def("wxyw", &Swizzled::wxyw)
		.def("wxzx", &Swizzled::wxzx)
		.def("wxzy", &Swizzled::wxzy)
		.def("wxzz", &Swizzled::wxzz)
		.def("wxzw", &Swizzled::wxzw)
		.def("wxwx", &Swizzled::wxwx)
		.def("wxwy", &Swizzled::wxwy)
		.def("wxwz", &Swizzled::wxwz)
		.def("wxww", &Swizzled::wxww)
		.def("wyxx", &Swizzled::wyxx)
		.def("wyxy", &Swizzled::wyxy)
		.def("wyxz", &Swizzled::wyxz)
		.def("wyxw", &Swizzled::wyxw)
		.def("wyyx", &Swizzled::wyyx)
		.def("wyyy", &Swizzled::wyyy)
		.def("wyyz", &Swizzled::wyyz)
		.def("wyyw", &Swizzled::wyyw)
		.def("wyzx", &Swizzled::wyzx)
		.def("wyzy", &Swizzled::wyzy)
		.def("wyzz", &Swizzled::wyzz)
		.def("wyzw", &Swizzled::wyzw)
		.def("wywx", &Swizzled::wywx)
		.def("wywy", &Swizzled::wywy)
		.def("wywz", &Swizzled::wywz)
		.def("wyww", &Swizzled::wyww)
		.def("wzxx", &Swizzled::wzxx)
		.def("wzxy", &Swizzled::wzxy)
		.def("wzxz", &Swizzled::wzxz)
		.def("wzxw", &Swizzled::wzxw)
		.def("wzyx", &Swizzled::wzyx)
		.def("wzyy", &Swizzled::wzyy)
		.def("wzyz", &Swizzled::wzyz)
		.def("wzyw", &Swizzled::wzyw)
		.def("wzzx", &Swizzled::wzzx)
		.def("wzzy", &Swizzled::wzzy)
		.def("wzzz", &Swizzled::wzzz)
		.def("wzzw", &Swizzled::wzzw)
		.def("wzwx", &Swizzled::wzwx)
		.def("wzwy", &Swizzled::wzwy)
		.def("wzwz", &Swizzled::wzwz)
		.def("wzww", &Swizzled::wzww)
		.def("wwxx", &Swizzled::wwxx)
		.def("wwxy", &Swizzled::wwxy)
		.def("wwxz", &Swizzled::wwxz)
		.def("wwxw", &Swizzled::wwxw)
		.def("wwyx", &Swizzled::wwyx)
		.def("wwyy", &Swizzled::wwyy)
		.def("wwyz", &Swizzled::wwyz)
		.def("wwyw", &Swizzled::wwyw)
		.def("wwzx", &Swizzled::wwzx)
		.def("wwzy", &Swizzled::wwzy)
		.def("wwzz", &Swizzled::wwzz)
		.def("wwzw", &Swizzled::wwzw)
		.def("wwwx", &Swizzled::wwwx)
		.def("wwwy", &Swizzled::wwwy)
		.def("wwwz", &Swizzled::wwwz)
		.def("wwww", &Swizzled::wwww)
	;
	bpy::def("Swizzle_xyzw", &Swizzle_xyzw<T, 4>);
}
