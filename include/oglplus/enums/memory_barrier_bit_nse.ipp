/*
 *  .file oglplus/enums/memory_barrier_bit_nse.ipp
 *
 *  Automatically generated header file. DO NOT modify manually,
 *  edit 'source/enums/memory_barrier_bit.txt' instead.
 *
 *  Copyright 2010-2012 Matus Chochlik. Distributed under the Boost
 *  Software License, Version 1.0. (See accompanying file
 *  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
 */

#ifdef OGLPLUS_LIST_NEEDS_COMMA
# undef OGLPLUS_LIST_NEEDS_COMMA
#endif

#if defined GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(VertexAttribArray, GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_ELEMENT_ARRAY_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(ElementArray, GL_ELEMENT_ARRAY_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_UNIFORM_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(Uniform, GL_UNIFORM_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_TEXTURE_FETCH_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(TextureFetch, GL_TEXTURE_FETCH_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(ShaderImageAccess, GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_COMMAND_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(Command, GL_COMMAND_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_PIXEL_BUFFER_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(PixelBuffer, GL_PIXEL_BUFFER_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_TEXTURE_UPDATE_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(TextureUpdate, GL_TEXTURE_UPDATE_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_BUFFER_UPDATE_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(BufferUpdate, GL_BUFFER_UPDATE_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_FRAMEBUFFER_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(Framebuffer, GL_FRAMEBUFFER_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_TRANSFORM_FEEDBACK_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(TransformFeedback, GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_ATOMIC_COUNTER_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(AtomicCounter, GL_ATOMIC_COUNTER_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_SHADER_STORAGE_BARRIER_BIT
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(ShaderStorage, GL_SHADER_STORAGE_BARRIER_BIT)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#if defined GL_ALL_BARRIER_BITS
# if OGLPLUS_LIST_NEEDS_COMMA
   ,
# endif
  OGLPLUS_ENUM_CLASS_VALUE(All, GL_ALL_BARRIER_BITS)
# ifndef OGLPLUS_LIST_NEEDS_COMMA
#  define OGLPLUS_LIST_NEEDS_COMMA 1
# endif
#endif
#ifdef OGLPLUS_LIST_NEEDS_COMMA
# undef OGLPLUS_LIST_NEEDS_COMMA
#endif

